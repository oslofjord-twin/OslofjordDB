version: '3'
services:
  timescale:
    container_name: timescale
    image: timescale/timescaledb-ha:pg14-latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
    ports:
      - 5432:5432
    volumes:
    - ./db/scripts/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    - ./db/scripts/load_data.sql:/docker-entrypoint-initdb.d/load_data.sql
    -  db_data:/var/lib/postgresql/data

  graphql-engine:
    image: hasura/graphql-engine:v2.35.1-ce.cli-migrations-v2
    ports:
    - "8080:8080"
    depends_on:
    - timescale
    restart: unless-stopped
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@timescale:5432/postgres
      HASURA_GRAPHQL_ACCESS_KEY: mylongsecretkey
    command:
      - graphql-engine
      - serve
      - --enable-console
    healthcheck:
      test: curl --fail http://localhost:8080/ || exit 1
      interval: 40s
      timeout: 15s
      retries: 2

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: unless-stopped
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
    volumes:
      - pgadmin_data:/var/lib/pgadmin  

  init:
    image: python:latest
    depends_on:
      graphql-engine:
        condition: service_healthy
    volumes:
     - ./db/scripts/track_tables.py:/track_tables.py
    command: >
      /bin/sh -c 'pip install requests && python track_tables.py'
    
volumes:
  db_data:
  pgadmin_data:
